
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
    }
}

plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "4.0.4"
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.github.johnrengelman.shadow"

// This adds support to ("embed", "shade", "include") libraries into our JAR
shadowJar {
    configurations = [project.configurations.include]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

shadowJar {
    project.configurations.shadow.setTransitive(true)
    configurations = [project.configurations.shadow]

    classifier "" // Replace the default JAR
}

reobf {
    shadowJar {} // Reobfuscate the shadowed JAR
}

jar.dependsOn shadowJar
jar.enabled = false

compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}
version = "${mod_version}"
group= "com.yoursole.hypixelsays" // https://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "hypixelsays"

configurations {
    // Creates an extra configuration that implements `implementation` to be used later as the configuration that shades libraries
    include
    implementation.extendsFrom(include)
}

repositories {
    maven {
        name = "hypixel"
        url "https://repo.hypixel.net/repository/Hypixel/"
    }
}

dependencies {
    shadow "net.hypixel:hypixel-api-core:4.2.1"
    shadow "net.hypixel:hypixel-api-transport-apache:4.2.1"
}

/**
 * This simply moves resources so they can be accessed at runtime, Forge is quite weird isn't it
 */
sourceSets {
    main {
        output.resourcesDir = java.outputDir
    }
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    replace "@VERSION@", project.version
    replaceIn "HypixelSays.java"
    mappings = "stable_22"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "mod_version", project.version
    inputs.property "mc_version", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        expand "mod_id":"${mod_id}",
        "mod_name":"${mod_name}",
        "mod_version":"${mod_version}",
        "mod_description":"${mod_description}",
        "mc_version":"${mc_version}"
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}
